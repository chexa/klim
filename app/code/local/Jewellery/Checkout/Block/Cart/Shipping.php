<?php/** * Magento * * NOTICE OF LICENSE * * This source file is subject to the Open Software License (OSL 3.0) * that is bundled with this package in the file LICENSE.txt. * It is also available through the world-wide-web at this URL: * http://opensource.org/licenses/osl-3.0.php * If you did not receive a copy of the license and are unable to * obtain it through the world-wide-web, please send an email * to license@magentocommerce.com so we can send you a copy immediately. * * DISCLAIMER * * Do not edit or add to this file if you wish to upgrade Magento to newer * versions in the future. If you wish to customize Magento for your * needs please refer to http://www.magentocommerce.com for more information. * * @category    Mage * @package     Mage_Checkout * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magentocommerce.com) * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0) */  error_reporting(E_ALL);ini_set('error_reporting', E_ALL);ini_set('display_errors', 1); class Jewellery_Checkout_Block_Cart_Shipping extends Mage_Checkout_Block_Cart_Shipping{    protected $_rates = array();    public function getEstimateRates()    {        if (empty($this->_rates)) {            $groups = $this->getAddress()->getGroupedAllShippingRates();			//$this->_rates = $groups;			//return $this->_rates;						//Check for Total > 100			$total =  Mage::getSingleton('checkout/session')->getQuote()->getSubtotal();						$tmpGroups = array();			foreach ( $groups as $code => $itemGroup )			{				foreach ( $itemGroup as $itemMethod )				{ 					if ( ($code == 'deutschepost_simple' || $code == 'deutschepost_intl') )					{						$itemPrice = $itemMethod->getPrice();						if ( $total < 100 && $itemPrice == 0 ) continue;						if ( $total >= 100 && $itemPrice != 0 ) continue;					}					$tmpGroups[$code][] = $itemMethod;				}			}			            $this->_rates = $tmpGroups;        }        return $this->_rates;    }   }